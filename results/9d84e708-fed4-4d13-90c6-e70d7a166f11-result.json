{"name": "Land-line phone field test with invalid values to test \"only numbers\" alert -- @1.5 ", "status": "broken", "statusDetails": {"message": "RecursionError: maximum recursion depth exceeded\n", "trace": "  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\venv\\Lib\\site-packages\\behave\\model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\venv\\Lib\\site-packages\\behave\\matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"steps\\general.py\", line 162, in field_has_invalid_value\n    assert widget.is_invalid is True and widget.is_valid is False and widget.check_alert_text(\n           ^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\text_dropdown_field.py\", line 38, in is_invalid\n    return self.text_widget.is_invalid is True or self.dropdown_widget.is_valid is False\n                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 75, in is_valid\n    return self.has_text(self.chosen_text)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 71, in has_text\n    assert self.has_text(text), f\"Text {text} in widget {self.label} is found and selected\"\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 71, in has_text\n    assert self.has_text(text), f\"Text {text} in widget {self.label} is found and selected\"\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 71, in has_text\n    assert self.has_text(text), f\"Text {text} in widget {self.label} is found and selected\"\n           ^^^^^^^^^^^^^^^^^^^\n  [Previous line repeated 981 more times]\n"}, "steps": [{"name": "Given I navigate to \"ConfirmationForStructure\" page", "status": "passed", "start": 1675983255583, "stop": 1675983255583}, {"name": "When I write \"053-34876556734567\" in \"טלפון קווי\"", "status": "passed", "start": 1675983255583, "stop": 1675983256074}, {"name": "Then field \"טלפון קווי\" has invalid value and with alert \"יש להזין ספרות בלבד\"", "status": "broken", "statusDetails": {"message": "RecursionError: maximum recursion depth exceeded\n", "trace": "  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\venv\\Lib\\site-packages\\behave\\model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\venv\\Lib\\site-packages\\behave\\matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"steps\\general.py\", line 162, in field_has_invalid_value\n    assert widget.is_invalid is True and widget.is_valid is False and widget.check_alert_text(\n           ^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\text_dropdown_field.py\", line 38, in is_invalid\n    return self.text_widget.is_invalid is True or self.dropdown_widget.is_valid is False\n                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 75, in is_valid\n    return self.has_text(self.chosen_text)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 71, in has_text\n    assert self.has_text(text), f\"Text {text} in widget {self.label} is found and selected\"\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 71, in has_text\n    assert self.has_text(text), f\"Text {text} in widget {self.label} is found and selected\"\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 71, in has_text\n    assert self.has_text(text), f\"Text {text} in widget {self.label} is found and selected\"\n           ^^^^^^^^^^^^^^^^^^^\n  [Previous line repeated 981 more times]\n"}, "attachments": [{"name": "ScreenShot After Failure", "source": "c24297c3-1322-49a0-8902-e3753dbd6a52-attachment.png", "type": "image/png"}], "start": 1675983256074, "stop": 1675983256300}], "parameters": [{"name": "text", "value": "053-34876556734567"}], "start": 1675983255582, "stop": 1675983256319, "uuid": "80b49d45-6c9d-44c7-9ed8-fbb719731bc4", "historyId": "04be20a491255fd3a399cac75db3181e", "fullName": "Testing confirmation for structure page: Land-line phone field test with invalid values to test \"only numbers\" alert", "labels": [{"name": "severity", "value": "critical"}, {"name": "feature", "value": "Testing confirmation for structure page"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython3"}]}