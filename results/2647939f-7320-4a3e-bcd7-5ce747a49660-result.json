{"name": "Mobile phone field test with invalid values to test the alert \"Numbers only\" message -- @1.4 ", "status": "broken", "statusDetails": {"message": "RecursionError: maximum recursion depth exceeded\n", "trace": "  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\venv\\Lib\\site-packages\\behave\\model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\venv\\Lib\\site-packages\\behave\\matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"steps\\general.py\", line 162, in field_has_invalid_value\n    assert widget.is_invalid is True and widget.is_valid is False and widget.check_alert_text(\n           ^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\text_dropdown_field.py\", line 38, in is_invalid\n    return self.text_widget.is_invalid is True or self.dropdown_widget.is_valid is False\n                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 75, in is_valid\n    return self.has_text(self.chosen_text)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 71, in has_text\n    assert self.has_text(text), f\"Text {text} in widget {self.label} is found and selected\"\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 71, in has_text\n    assert self.has_text(text), f\"Text {text} in widget {self.label} is found and selected\"\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 71, in has_text\n    assert self.has_text(text), f\"Text {text} in widget {self.label} is found and selected\"\n           ^^^^^^^^^^^^^^^^^^^\n  [Previous line repeated 981 more times]\n"}, "steps": [{"name": "Given I navigate to \"FreedomInfo\" page", "status": "passed", "start": 1675983495818, "stop": 1675983495818}, {"name": "When I write \"07-3457654387646734567\" in \"טלפון נייד\"", "status": "passed", "start": 1675983495818, "stop": 1675983496398}, {"name": "Then field \"טלפון נייד\" has invalid value and with alert \"יש להזין ספרות בלבד\"", "status": "broken", "statusDetails": {"message": "RecursionError: maximum recursion depth exceeded\n", "trace": "  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\venv\\Lib\\site-packages\\behave\\model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\venv\\Lib\\site-packages\\behave\\matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"steps\\general.py\", line 162, in field_has_invalid_value\n    assert widget.is_invalid is True and widget.is_valid is False and widget.check_alert_text(\n           ^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\text_dropdown_field.py\", line 38, in is_invalid\n    return self.text_widget.is_invalid is True or self.dropdown_widget.is_valid is False\n                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 75, in is_valid\n    return self.has_text(self.chosen_text)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 71, in has_text\n    assert self.has_text(text), f\"Text {text} in widget {self.label} is found and selected\"\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 71, in has_text\n    assert self.has_text(text), f\"Text {text} in widget {self.label} is found and selected\"\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 71, in has_text\n    assert self.has_text(text), f\"Text {text} in widget {self.label} is found and selected\"\n           ^^^^^^^^^^^^^^^^^^^\n  [Previous line repeated 981 more times]\n"}, "attachments": [{"name": "ScreenShot After Failure", "source": "1542489d-180c-44f6-9e3a-d052237f9361-attachment.png", "type": "image/png"}], "start": 1675983496398, "stop": 1675983496605}], "parameters": [{"name": "text", "value": "07-3457654387646734567"}], "start": 1675983495817, "stop": 1675983496624, "uuid": "621a8dbc-4ded-4205-97e9-5db67d3d0897", "historyId": "7d6d2f12d3fd10eab9f03024093f9de7", "fullName": "Testing FreedomInfo page: Mobile phone field test with invalid values to test the alert \"Numbers only\" message", "labels": [{"name": "severity", "value": "critical"}, {"name": "feature", "value": "Testing FreedomInfo page"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython3"}]}