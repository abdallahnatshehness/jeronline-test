{
  "uid" : "17c175595b9ccc97",
  "name" : "Mobile phone field test with valid values -- @1.2 ",
  "fullName" : "Testing FreedomInfo page: Mobile phone field test with valid values",
  "historyId" : "0876e0d0367eba74e5224dd4c3bfcad1",
  "time" : {
    "start" : 1675983500837,
    "stop" : 1675983501372,
    "duration" : 535
  },
  "status" : "broken",
  "statusMessage" : "RecursionError: maximum recursion depth exceeded\n",
  "statusTrace" : "  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\venv\\Lib\\site-packages\\behave\\model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\venv\\Lib\\site-packages\\behave\\matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"steps\\general.py\", line 189, in field_has_valid_value\n    assert widget.is_valid is True, f\"Field {widget_name} considered as invalid in the valid values test\"\n           ^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\text_dropdown_field.py\", line 42, in is_valid\n    return self.text_widget.is_valid is True and self.dropdown_widget.is_valid is True\n                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 75, in is_valid\n    return self.has_text(self.chosen_text)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 71, in has_text\n    assert self.has_text(text), f\"Text {text} in widget {self.label} is found and selected\"\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 71, in has_text\n    assert self.has_text(text), f\"Text {text} in widget {self.label} is found and selected\"\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 71, in has_text\n    assert self.has_text(text), f\"Text {text} in widget {self.label} is found and selected\"\n           ^^^^^^^^^^^^^^^^^^^\n  [Previous line repeated 981 more times]\n",
  "flaky" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "RecursionError: maximum recursion depth exceeded\n",
    "statusTrace" : "  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\venv\\Lib\\site-packages\\behave\\model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\venv\\Lib\\site-packages\\behave\\matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"steps\\general.py\", line 189, in field_has_valid_value\n    assert widget.is_valid is True, f\"Field {widget_name} considered as invalid in the valid values test\"\n           ^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\text_dropdown_field.py\", line 42, in is_valid\n    return self.text_widget.is_valid is True and self.dropdown_widget.is_valid is True\n                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 75, in is_valid\n    return self.has_text(self.chosen_text)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 71, in has_text\n    assert self.has_text(text), f\"Text {text} in widget {self.label} is found and selected\"\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 71, in has_text\n    assert self.has_text(text), f\"Text {text} in widget {self.label} is found and selected\"\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 71, in has_text\n    assert self.has_text(text), f\"Text {text} in widget {self.label} is found and selected\"\n           ^^^^^^^^^^^^^^^^^^^\n  [Previous line repeated 981 more times]\n",
    "steps" : [ {
      "name" : "Given I navigate to \"FreedomInfo\" page",
      "time" : {
        "start" : 1675983500838,
        "stop" : 1675983500838,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "When I write \"050-6393648\" in \"טלפון נייד\"",
      "time" : {
        "start" : 1675983500838,
        "stop" : 1675983501151,
        "duration" : 313
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "Then field \"טלפון נייד\" has valid value",
      "time" : {
        "start" : 1675983501151,
        "stop" : 1675983501353,
        "duration" : 202
      },
      "status" : "broken",
      "statusMessage" : "RecursionError: maximum recursion depth exceeded\n",
      "statusTrace" : "  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\venv\\Lib\\site-packages\\behave\\model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\venv\\Lib\\site-packages\\behave\\matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"steps\\general.py\", line 189, in field_has_valid_value\n    assert widget.is_valid is True, f\"Field {widget_name} considered as invalid in the valid values test\"\n           ^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\text_dropdown_field.py\", line 42, in is_valid\n    return self.text_widget.is_valid is True and self.dropdown_widget.is_valid is True\n                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 75, in is_valid\n    return self.has_text(self.chosen_text)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 71, in has_text\n    assert self.has_text(text), f\"Text {text} in widget {self.label} is found and selected\"\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 71, in has_text\n    assert self.has_text(text), f\"Text {text} in widget {self.label} is found and selected\"\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\LENOVO\\Desktop\\JERUSALEMMUNI\\packages\\ui_widgets\\dropdown_selector.py\", line 71, in has_text\n    assert self.has_text(text), f\"Text {text} in widget {self.label} is found and selected\"\n           ^^^^^^^^^^^^^^^^^^^\n  [Previous line repeated 981 more times]\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "91c80e4be7aa739f",
        "name" : "ScreenShot After Failure",
        "source" : "91c80e4be7aa739f.png",
        "type" : "image/png",
        "size" : 71978
      } ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 3,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "feature",
    "value" : "Testing FreedomInfo page"
  }, {
    "name" : "framework",
    "value" : "behave"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "text",
    "value" : "050-6393648"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "17c175595b9ccc97.json",
  "parameterValues" : [ "050-6393648" ]
}